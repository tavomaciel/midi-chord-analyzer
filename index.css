/*
    MIDI Chord Analyzer
    Copyright (C) 2023  Gustavo Maciel

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <https://www.gnu.org/licenses/>.
*/
@import url('https://fonts.googleapis.com/css2?family=Gothic+A1:wght@100;200;300;400;500;600;700;800;900&family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap');
body {
    font-family: 'Roboto', 'Gothic A1', sans-serif;
}
button {
    font-family: 'Roboto', 'Gothic A1', sans-serif;
}
#pianoWrapper {
    width: 100%;
    height: 10vw;
}
#challenge {
    width: 100%;
    text-align: center;
}
#challengeStartContainer {
    padding-top: 50px;
    padding-bottom: 50px;
    width: 100%;
    height: 100%;
}
#challengeTargetContainer {
    padding-top: 50px;
    padding-bottom: 50px;
}
#challengeCongrats {
    padding-top: 50px;
    padding-bottom: 50px;
}
#challengeTarget {
    font-size: 150%;
}
#challengeTarget, #challengeTargetNext {
    color: #339;
}
#startChallenge {
    width: 180px;
    height: 30px;
}
#challengeCongrats {
    font-size: 150%;
    color: green;
}
#challengeStatus {
    text-align: left;
}
#challengeHeader {
    display: flex;
    flex-direction: column;
}
#challengeStatusAndShowSettings {
    display: flex;
    justify-content: space-between;
    align-items: center;
}
#challengeFlex {
    display: flex;
    flex-direction: row;
    justify-content: center;
}
#challengeFlex > fieldset {
    display: flex;
    flex-wrap: wrap;
    justify-content: space-between;
}
#challengeFlex > fieldset > div {
    display: flex;
    flex-wrap: nowrap;
    align-items: center;
    flex-basis: 30%;
}
#challengeFlex > fieldset > hr {
    flex-basis: 100%;
    margin: 0.25em;
}
#challengeFlex > fieldset > h4 {
    flex-basis: 100%;
    margin: 0;
}

#circle {
  position: relative;
  width: 100%;
  height: 43vh; /* 20vh radius * 2 + 3vh element height */
}

#circleMajorNotes > .circleNote {
    display: block;
    position: absolute;
    top:  50%;
    left: 50%;
    font-family: 'Roboto', 'Gothic A1', sans-serif;
    font-weight: 600;
    font-size: 3vh;
}
#circleMinorNotes > .circleNote {
    display: block;
    position: absolute;
    top:  50%;
    left: 50%;
    font-family: 'Roboto', 'Gothic A1', sans-serif;
    font-weight: 400;
}
#circleMajorNotes > .circleNote:nth-of-type(1) {
    transform: translate(-50%, -50%) rotate(-90deg) translate(20vh) rotate(90deg);
}
#circleMajorNotes > .circleNote:nth-of-type(2) {
    transform: translate(-50%, -50%) rotate(-60deg) translate(20vh) rotate(60deg);
}
#circleMajorNotes > .circleNote:nth-of-type(3) {
    transform: translate(-50%, -50%) rotate(-30deg) translate(20vh) rotate(30deg);
}
#circleMajorNotes > .circleNote:nth-of-type(4) {
    transform: translate(-50%, -50%) rotate(0) translate(20vh) rotate(0);
}
#circleMajorNotes > .circleNote:nth-of-type(5) {
    transform: translate(-50%, -50%) rotate(30deg) translate(20vh) rotate(-30deg);
}
#circleMajorNotes > .circleNote:nth-of-type(6) {
    transform: translate(-50%, -50%) rotate(60deg) translate(20vh) rotate(-60deg);
}
#circleMajorNotes > .circleNote:nth-of-type(7) {
    transform: translate(-50%, -50%) rotate(90deg) translate(20vh) rotate(-90deg);
}
#circleMajorNotes > .circleNote:nth-of-type(8) {
    transform: translate(-50%, -50%) rotate(120deg) translate(20vh) rotate(-120deg);
}
#circleMajorNotes > .circleNote:nth-of-type(9) {
    transform: translate(-50%, -50%) rotate(150deg) translate(20vh) rotate(-150deg);
}
#circleMajorNotes > .circleNote:nth-of-type(10) {
    transform: translate(-50%, -50%) rotate(180deg) translate(20vh) rotate(-180deg);
}
#circleMajorNotes > .circleNote:nth-of-type(11) {
    transform: translate(-50%, -50%) rotate(210deg) translate(20vh) rotate(-210deg);
}
#circleMajorNotes > .circleNote:nth-of-type(12) {
    transform: translate(-50%, -50%) rotate(240deg) translate(20vh) rotate(-240deg);
}
#circleMinorNotes > .circleNote:nth-of-type(1) {
    transform: translate(-50%, -50%) rotate(-90deg) translate(12.5vh) rotate(90deg);
}
#circleMinorNotes > .circleNote:nth-of-type(2) {
    transform: translate(-50%, -50%) rotate(-60deg) translate(12.5vh) rotate(60deg);
}
#circleMinorNotes > .circleNote:nth-of-type(3) {
    transform: translate(-50%, -50%) rotate(-30deg) translate(12.5vh) rotate(30deg);
}
#circleMinorNotes > .circleNote:nth-of-type(4) {
    transform: translate(-50%, -50%) rotate(0) translate(12.5vh) rotate(0);
}
#circleMinorNotes > .circleNote:nth-of-type(5) {
    transform: translate(-50%, -50%) rotate(30deg) translate(12.5vh) rotate(-30deg);
}
#circleMinorNotes > .circleNote:nth-of-type(6) {
    transform: translate(-50%, -50%) rotate(60deg) translate(12.5vh) rotate(-60deg);
}
#circleMinorNotes > .circleNote:nth-of-type(7) {
    transform: translate(-50%, -50%) rotate(90deg) translate(12.5vh) rotate(-90deg);
}
#circleMinorNotes > .circleNote:nth-of-type(8) {
    transform: translate(-50%, -50%) rotate(120deg) translate(12.5vh) rotate(-120deg);
}
#circleMinorNotes > .circleNote:nth-of-type(9) {
    transform: translate(-50%, -50%) rotate(150deg) translate(12.5vh) rotate(-150deg);
}
#circleMinorNotes > .circleNote:nth-of-type(10) {
    transform: translate(-50%, -50%) rotate(180deg) translate(12.5vh) rotate(-180deg);
}
#circleMinorNotes > .circleNote:nth-of-type(11) {
    transform: translate(-50%, -50%) rotate(210deg) translate(12.5vh) rotate(-210deg);
}
#circleMinorNotes > .circleNote:nth-of-type(12) {
    transform: translate(-50%, -50%) rotate(240deg) translate(12.5vh) rotate(-240deg);
}

.highlightedCircleInterval:not(.highlightedCircleScale)::before {
    content: ' ';
    background-color: #FF000077;
    filter: blur(10px);
    position: absolute;
    top: 50%;
    left: 50%;
    width: 20px;
    height: 20px;
    transform: translate(-10px, -10px);
    z-index: -1;
}

.highlightedCircleScale::before {
    content: ' ';
    background-color: #FF0000FF;
    filter: blur(5px);
    position: absolute;
    top: 50%;
    left: 50%;
    width: 16px;
    height: 16px;
    transform: translate(-8px, -8px);
    z-index: -1;
}